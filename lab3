using System;
using System.Windows.Forms;

namespace lab3
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void button1_Click(object sender, EventArgs e)
        {
            MyClass class1 = new MyClass();

            double xValue = Convert.ToDouble(textBox1.Text);
            double yValue = Convert.ToDouble(textBox2.Text);

            class1.x = xValue;
            class1.y = yValue;

            double result = class1.f();
            textBox3.Text = result.ToString();

            double resultWithParams = class1.f(xValue, yValue);
            textBox4.Text = resultWithParams.ToString(); 

            MyClass.xs = xValue;
            MyClass.ys = yValue;

            double resultStatic = MyClass.fs();
            textBox5.Text = resultStatic.ToString(); 

            double resultStaticWithParams = MyClass.fs(xValue, yValue);
            textBox6.Text = resultStaticWithParams.ToString(); 


        }

        public class MyClass
        {

            public double x { get; set; }
            public double y { get; set; }

            public static double xs = 10;
            public static double ys = 10;

            public MyClass() { }

            public MyClass(double x, double y)
            {
                this.x = x;
                this.y = y;
            }

            public virtual double f()
            {
                return 1 * Math.Pow(x - 1, 2) + 1 * (x - 1) * Math.Sin(x - 1) +
                       1 * Math.Pow(Math.Sin(x - 1), 2) + 3 * Math.Pow(y - 0, 2);
            }

            public static double fs()
            {
                return 1 * Math.Pow(xs - 1, 2) + 1 * (xs - 1) * Math.Sin(xs - 1) +
                       1 * Math.Pow(Math.Sin(xs - 1), 2) + 3 * Math.Pow(ys - 0, 2);
            }

            public virtual double f(double x, double y)
            {
                return 1 * Math.Pow(x - 1, 2) + 1 * (x - 1) * Math.Sin(x - 1) +
                       1 * Math.Pow(Math.Sin(x - 1), 2) + 3 * Math.Pow(y - 0, 2);
            }

            public static double fs(double xs, double ys)
            {
                return 1 * Math.Pow(xs - 1, 2) + 1 * (xs - 1) * Math.Sin(xs - 1) +
                       1 * Math.Pow(Math.Sin(xs - 1), 2) + 3 * Math.Pow(ys - 0, 2);
            }
        }
    }
}

